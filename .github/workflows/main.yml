name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  check-package:

    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2  # https://github.com/actions/checkout/issues/124


      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true  # runs 'bundle install' and caches installed gems automatically


      - name: Create local package repository
        run: |
          bundle exec jekyll build -d test
          ##    PKG_INDEX_FILE is relative path
          echo "PKG_INDEX_FILE=\"test/packages/index.html\"" >> $GITHUB_ENV


      - name: Check for changed packages
        run: |
          for f in $(git --no-pager diff --name-only HEAD HEAD~1)
          do
            if [ "$(dirname $f)" == "packages" ] && [ "${f##*.}" == "yaml" ]
            then
              name="$(basename $f)"
              CHANGED_PACKAGES+=" ${name%.*} "
            fi
          done
          if [ -n "$CHANGED_PACKAGES" ]
          then
            echo "Changed packages:  $CHANGED_PACKAGES"
            echo "CHANGED_PACKAGES=\"$CHANGED_PACKAGES\"" >> $GITHUB_ENV
          else
            echo "No packages changed."
          fi
        env:
          CHANGED_PACKAGES:


      - name: Pull Octave Docker image
        if: ${{ env.CHANGED_PACKAGES != '' }}
        run: docker pull docker.io/gnuoctave/octave:6.2.0


      - name: Test packages
        if: ${{ env.CHANGED_PACKAGES != '' }}
        run: |
          pkgs=${{ env.CHANGED_PACKAGES }}
          for p in $pkgs
          do
            echo -e "\n\n## Test package '$p'\n\n"
            docker run \
              --volume="$(pwd):/home/jovyan/packages:rw" \
              gnuoctave/octave:6.2.0 \
              octave-cli --eval "cd packages/assets/ci; \
                octave_ci('$p', '/home/jovyan/packages/${{ env.PKG_INDEX_FILE }}')"
          done


  check-yaml:

    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'

      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel yamllint

      # FIXME: Remove first line, once the affected file and line number is
      #        visible by default.
      - name: Run yamllint
        run: |
          yamllint --format standard -c ./assets/ci/yamllint.yaml packages
          yamllint -c ./assets/ci/yamllint.yaml packages
